#!/usr/bin/env php
<?php
	
	// Find the vendor directory by looking for autoload.php
	$dir = __DIR__;
	$autoloadPath = null;
	$packageBasePath = null;
	
	// Try to find the autoload.php file by traversing up the directory tree
	while ($dir !== '/' && $dir !== '' && $dir !== false && $dir !== '\\') {
		// Check if we're in a vendor/package/... path
		if (basename(dirname($dir, 2)) === 'vendor') {
			// We're installed as a dependency
			$autoloadPath = dirname($dir, 3) . '/autoload.php';
   
			// The base path of our package is two levels up from bin directory
			// This should point to the root of the package (where src is a subdirectory)
			$packageBasePath = dirname($dir, 2);
			
			if (file_exists($autoloadPath)) {
				break;
			}
		}
		
		// Check if the current directory has vendor/autoload.php
		if (file_exists($dir . '/vendor/autoload.php')) {
			$autoloadPath = $dir . '/vendor/autoload.php';
			$packageBasePath = $dir;
			break;
		}
		
		$dir = dirname($dir);
	}
	
	if ($autoloadPath === null || !file_exists($autoloadPath)) {
		fwrite(STDERR, "Unable to locate autoload.php. Make sure Composer dependencies are installed.\n");
		exit(1);
	}
	
	require_once $autoloadPath;
	
	use Quellabs\Sculpt\Application;
	use Quellabs\Sculpt\Console\ConsoleInput;
	use Quellabs\Sculpt\Console\ConsoleOutput;
	
	// For debugging - uncomment this to see what paths are being used
	// echo "Autoload Path: {$autoloadPath}\n";
	// echo "Package Base Path: {$packageBasePath}\n";
	// echo "Commands Dir: {$packageBasePath}/src/Commands\n";
	// if (!is_dir("{$packageBasePath}/src/Commands")) {
	//     echo "Commands directory does not exist!\n";
	// }
	
	// Bootstrap the application
	$output = new ConsoleOutput();
	$input = new ConsoleInput($output);
	$app = new Application($input, $output, $packageBasePath);
	
	// Discover and register service providers
	$app->discoverProviders();
	
	// Run the application with command line arguments
	$app->run($argv);